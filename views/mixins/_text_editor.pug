mixin textEditor(type='', text='', placeholderText='', formName='')

    script(type="text/javascript" src="/javascripts/pagedown/Markdown.Converter.js")
    script(type="text/javascript" src="/javascripts/pagedown/Markdown.Sanitizer.js")
    script(type="text/javascript" src="/javascripts/pagedown/Markdown.Editor.js")

    if type === 'editor'
        .wmd-panel
            #wmd-button-bar
            textarea(name=`${formName}` class='wmd-input' id='wmd-input' placeholder=`${placeholderText}`)= text
        div(id='wmd-preview' class='wmd-panel')

    //- if type === 'backstory'
    //-     .wmd-panel
    //-         #wmd-button-bar
    //-         textarea(name='backstory' class='wmd-input' id='wmd-input' style='height: 300px;' placeholder="Write your character's backstory here.")=(story.backstory || null)
    //-     div(id="wmd-preview" class="wmd-panel wmd-preview-backstory")

    //- else if type === 'story'
    //-     .wmd-panel
    //-         #wmd-button-bar
    //-         textarea(name='summary' class='wmd-input' id='wmd-input' style='height: 300px;' placeholder=`${placeholderText}`)=(text || null)
    //-     div(id='wmd-preview' class='wmd-panel wmd-preview-backstory')
    
    //- else if type === 'notes'
    //-     .wmd-panel
    //-         #wmd-button-bar-second
    //-         textarea(name='notes' class='wmd-input' id='wmd-input-second' rows='5' placeholder='Escribe notas de la sesión aquí.')
    //-     div(id='wmd-preview-second' class='wmd-panel wmd-preview-backstory')

    else if type === 'view'
        textarea(class="wmd-input" id="wmd-input" style='display: none;')= text
        div(id="wmd-preview" class="wmd-panel wmd-preview heroSummary")
    
    script.
        const converter = new Markdown.Converter();

        converter.hooks.chain("preBlockGamut", function (text, rbg) {
            return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                return "<blockquote>" + rbg(inner) + "</blockquote>\n";
            });
        });

        converter.hooks.chain("preConversion", function (text) {
            return text.replace(/ {4}/g, "<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>");
        });

        converter.hooks.chain("preConversion", function (text) {
            return text.replace(/(\(nL\))/g, "<br>");
        });

        const helpString = `Help:
        * ## Word ## - Word between '##' = Heading
        * (    ) - 4 spaces = Tab
        * (nL) - Writing '(nL)' = Pressing enter (effect can be seen in text preview)
        * *word* - Word between '*' = Italics
        * **word** - Word between '**' = Bold
        * (> ) - Greater than + space = Makes line into quote
        * \`word\` - Word between '\`' = Code
        * --------- - 9 '-' = Horizontal line`

        var help = function () { alert(helpString); }
        var options = {
            helpButton: { handler: help },
            strings: { quoteexample: "whatever you're quoting, put it right here" }
        };

        const editor = new Markdown.Editor(converter, "", options);

        editor.run();