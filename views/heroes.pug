extends layout
include mixins/_hero_description
include mixins/_text_editor
include mixins/_spell_modal.pug

block content
    .outer_wrapper.color
        .content
            .content_header
                a(href="/heroes")
                    h2 Heroes
                if !url.endsWith('/heroes')
                    .content_options_wrapper
                        .content_option
                            a(href=`/heroes/${hero.name}/summary`)
                                h4 Resumen
                        .content_option
                            a(href=`/heroes/${hero.name}/stats`)
                                h4 Stats
                        .content_option
                            a(href=`/heroes/${hero.name}/spells`)
                                h4 Poderes
                        .content_option
                            a(href=`/heroes/${hero.name}/sheets`)
                                h4 Sheets
            .content_sidebar
                each hero in heroes
                    a.sidebar_item(href=`/heroes/${hero.name}`) #{hero.name}
                //- a.sidebar_item(href='/heroes/dimas') Dimas
                //- a.sidebar_item(href='/heroes/gar') Gar
                //- a.sidebar_item(href='/heroes/golo') Golo
                //- a.sidebar_item(href='/heroes/gura') Gura
                //- a.sidebar_item(href='/heroes/kairon') Kairon
                //- a.sidebar_item(href='/heroes/ophiriel') Ophiriel
            .content_main
                if url.endsWith('/heroes')
                    h3 Intro to Heroes page
                    hr
                else
                    h3= `${hero.name} `
                        span(style='font-size: 0.7em;')= `(nivel ${hero.info.level})`
                    hr
                    if url.endsWith('/summary')
                        .text_wrap
                            if hero.image === '' || hero.image === undefined
                                img(src=tmpImg, alt=`${hero.name} image`)
                            else
                                img(src=`http://res.cloudinary.com/duezou4td/image/upload/${hero.image}.png`, alt=`${hero.name} image`)
                            .basic_info
                                h4 Resumen
                                p= `Lugar de Origen: ${hero.info.place_of_origin || '???'}`
                                p= `Edad: ${hero.info.age || '???'}`
                                p= `Raza: ${hero.info.race || '???'}`
                                p= `Clase: ${hero.info.class || '???'}`
                                p= `Background: ${hero.info.background || '???'}`
                                p= `Alineamiento: ${hero.info.alignment || '???'}`
                            .basic_info
                                h4 Características Físicas
                                p= `Estatura: ${hero.info.height || '???'}`
                                p= `Peso: ${hero.info.weight || '???'}`
                                p= `Piel (Color): ${hero.info.skin_color || '???'}`
                                p= `Ojos (Color): ${hero.info.eye_color || '???'}`
                                p= `Pelo (Color): ${hero.info.hair_color || '???'}`
                        h4 Personalidad
                        .main_item.margin.smaller_font_9
                            p <strong>Rasgos:</strong>
                                em= ` ${hero.personality.personality_traits || '???'}`
                        .main_item.margin.smaller_font_9
                            p <strong>Ideales:</strong>
                                em= ` ${hero.personality.ideals || '???'}`
                        .main_item.margin.smaller_font_9
                            p <strong>Lazos:</strong>
                                em= ` ${hero.personality.bonds || '???'}`
                        .main_item.margin.smaller_font_9
                            p <strong>Fallas:</strong>
                                em= ` ${hero.personality.personality_traits || '???'}`
                        
                        h4 Backstory
                        hr
                        if hero.story.backstory != '' && hero.story.backstory != undefined
                            +textEditor('view', hero.story.backstory)
                        else
                            p #{hero.name} no tiene backstory.
                        
                        h4 Aliados y Organizaciones
                        hr
                        - const alliesOrgs = hero.story.allies_and_organizations;
                        if alliesOrgs.emblem_image != '' && alliesOrgs.emblem_image != undefined
                                .text_wrap
                                    if alliesOrgs.emblem_image === '' || alliesOrgs.emblem_image === undefined
                                        img(src=tmpImg, alt=`${hero.name}'s organization's emblem`)
                                    else
                                        img(src=`http://res.cloudinary.com/duezou4td/image/upload/${alliesOrgs.emblem_image}.png`, alt=`${hero.name}'s organization's emblem`)
                        if alliesOrgs.organization_name === '' || alliesOrgs.organization_name === undefined
                            p #{hero.name} no forma parte de ninguna organización hasta ahora.
                        else
                            p #{hero.name} forma parte de #{alliesOrgs.organization_name}.
                        - const parts = (alliesOrgs.text != undefined) ? alliesOrgs.text.split(/(\r\n)/g) : [];
                        each part in parts
                            p= part
                        
                    else if url.endsWith('/stats')
                        - const att = hero.attributes;
                        .stat_grid
                            .stat_block
                                strong Inspiration
                                p #{att.inspiration}
                            .stat_block
                                strong Proficiency Bonus
                                if att.proficiency_bonus > 0
                                    p +#{att.proficiency_bonus}
                                else
                                    p #{att.proficiency_bonus}
                            .stat_block
                                strong Passive Perception
                                p #{att.passive_perception}
                        h4 Atributos Físicos
                        hr
                        - const physAtt = hero.physical_attributes;
                        .stat_grid
                            .stat_block
                                strong AC
                                p #{physAtt.ac}
                            .stat_block
                                strong Initiative
                                p= physAtt.initiative > 0 ? `+${physAtt.initiative}` : physAtt.initiative
                            .stat_block
                                strong Speed
                                p #{physAtt.speed} ft
                            .stat_block
                                strong Max HP
                                p #{physAtt.max_hp}
                            .stat_block
                                strong Total HitDie
                                p #{physAtt.total_hitdie}
                        h4 Atributos
                        hr
                        - const attNameArr = ['Strength', 'Dexterity', 'Constitution', 'Intelligence', 'Wisdom', 'Charisma'];
                        - const attArr = [att.strength, att.dexterity, att.constitution, att.intelligence, att.wisdom, att.charisma];
                        - const attModArr = [att.strengthMod, att.dexterityMod, att.constitutionMod, att.intelligenceMod, att.wisdomMod, att.charismaMod];
                        .stat_grid
                            - for(let i = 0; i < 6; i++)
                                .stat_block
                                    if (attModArr[i] > 0)
                                        strong= `${attNameArr[i]} (+${attModArr[i]})`
                                    else
                                        strong= `${attNameArr[i]} (${attModArr[i]})`
                                    p= attArr[i]
                        h4 Saving Throws
                        hr
                        - const st = hero.saving_throws;
                        - const stArr = [st.strength, st.dexterity, st.constitution, st.intelligence, st.wisdom, st.charisma];
                        .stat_grid
                            - for(let i = 0; i < 6; i++)
                                .stat_block
                                    if (stArr[i].proficient)
                                        strong= `${attNameArr[i]} (proficient)`
                                    else
                                        strong= `${attNameArr[i]}`
                                    if (stArr[i].value > 0)
                                        p= `+${stArr[i].value}`
                                    else
                                        p= `${stArr[i].value}`
                        h4 Skills
                        hr
                        - const sk = hero.skills;
                        - const skNameArr = ['Acrobatics', 'Animal Handling', 'Arcana', 'Athletics', 'Deception', 'History', 'Insight', 'Intimidation', 'Investigation', 'Medicine', 'Nature', 'Perception', 'Performance', 'Persuasion', 'Religion', 'Sleight of Hand', 'Stealth', 'Survival'];
                        - const skArr = [sk.acrobatics, sk.animal_handling, sk.arcana, sk.athletics, sk.deception, sk.history, sk.insight, sk.intimidation, sk.investigation, sk.medicine, sk.nature, sk.perception, sk.performance, sk.persuasion, sk.religion, sk.sleight_of_hand, sk.stealth, sk.survival];
                        .stat_grid
                            - for(let i = 0; i < skArr.length; i++)
                                .stat_block
                                    if (skArr[i].proficient)
                                        strong= `${skNameArr[i]} (proficient)`
                                    else
                                        strong= `${skNameArr[i]}`
                                    if (skArr[i].value > 0)
                                        p= `+${skArr[i].value}`
                                    else
                                        p= `${skArr[i].value}`
                    else if url.endsWith('/spells')
                        h4 #{hero.info.race || 'Racial'} spells:
                        each level in heroSpells.racial
                            if (level.length != 1)
                                h5= `${level[0]}`
                            each spell in level
                                if (spell instanceof Object)
                                    .spell_item
                                        p= `${spell.name}`
                                        p.dropdown_button.clickable &nabla;
                                    +spellModal(spell)
                        hr
                        
                        h4 #{hero.info.class || 'Class'} spells:
                        each level in heroSpells.class
                            if (level.length != 1)
                                h5= `${level[0]}`
                            each spell in level
                                if (spell instanceof Object)
                                    .spell_item
                                        p= `${spell.name}`
                                        p.dropdown_button.clickable &nabla;
                                    +spellModal(spell)
                        
                        script.
                            const dropdownButtons = document.querySelectorAll('.dropdown_button');
                            const inlineModals = document.querySelectorAll('.inline_modal');

                            dropdownButtons.forEach((element, index) => {
                                element.addEventListener('click', () => {
                                    inlineModals[index].style.display === '' || inlineModals[index].style.display === 'none'
                                        ? inlineModals[index].style.display = 'block'
                                        : inlineModals[index].style.display = 'none'
                                    
                                    element.innerHTML === '∇'
                                        ? element.innerHTML = '&Delta;'
                                        : element.innerHTML = '&nabla;';
                                });
                            });
                    else if url.endsWith('/sheets')
                        - const urlSheet = `/heroes/${hero.name}/charactersheet/charactersheet`;
                        - const urlDetails = `/heroes/${hero.name}/charactersheet/characterdetails`;
                        - const urlSpell = `/heroes/${hero.name}/charactersheet/spellcasting`;
                        iframe(src=`${urlSheet}#toolbar=0` type="application/pdf" frameborder="0")
                        iframe(src=`${urlDetails}#toolbar=0` type="application/pdf" frameborder="0")
                        iframe(src=`${urlSpell}#toolbar=0` type="application/pdf" frameborder="0")
                        hr
                        .stat_grid
                            .stat_block
                                a.button_small(href=urlSheet target='_blank') See Character Sheet
                            .stat_block
                                a.button_small(href=urlDetails target='_blank') See Details Sheet
                            .stat_block
                                a.button_small(href=urlSpell target='_blank') See Spell Sheet
                        
                    else
                        +heroDescription()