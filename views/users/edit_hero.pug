extends ../layout
include ../mixins/_text_editor
include ../mixins/_spell_modal
include ../mixins/_spell_form

block content
    .outer_wrapper.color
        .content
            .content_header
                h2 #{hero.name} (#{hero.player_name})
            .content_sidebar
                - const path = `/users/user/${hero.player_name}/hero/`;
                a.sidebar_item(href=`${path}0`) Basic Info
                a.sidebar_item(href=`${path}1`) Personality
                a.sidebar_item(href=`${path}2`) Stats
                a.sidebar_item(href=`${path}3`) Physical Attributes
                a.sidebar_item(href=`${path}4`) Saving Throws
                a.sidebar_item(href=`${path}5`) Skills
                a.sidebar_item(href=`${path}6`) Weapons
                a.sidebar_item(href=`${path}7`) Equipment
                a.sidebar_item(href=`${path}8`) Additional Info
                a.sidebar_item(href=`${path}9`) Story
                a.sidebar_item(href=`${path}10`) Treasure
                a.sidebar_item(href=`${path}11`) Spells
            .content_main
                form.content_form(action=`/users/user/${username}/hero/save/${pageNumber}` method='post' enctype='multipart/form-data')
                    if url.endsWith('/saved')
                        strong Los cambios han sido guardados
                        hr
                    - const info = hero.info;
                    - const personality = hero.personality;
                    - const attr = hero.attributes;
                    - const phys = hero.physical_attributes;
                    - const st = hero.saving_throws;
                    - const skills = hero.skills;
                    - const weapons = hero.attacksAndSpellCasting;
                    - const equipment = hero.equipment;
                    - const addInfo = hero.additional_info;
                    - const story = hero.story;
                    - const alliesOrgs = hero.story.allies_and_organizations;
                    - const treasure = hero.treasure;
                    if pageNumber == 0
                        h3 Basic Info
                        hr
                        .form_input
                            label(for='image') Character Image:
                            if hero.image != '' && hero.image != undefined
                                img(src=`http://res.cloudinary.com/duezou4td/image/upload/${hero.image}.png`, alt=`${hero.name}'s Image`)
                                input(type='file' name='image' id='image')
                                .form_input.radio
                                    p Remove Image
                                    label(for="remove_image.true") Yes
                                    input(type="radio" name='remove_image' id='remove_image.true' value='true')
                                    label(for="remove_image.false") No
                                    input(type="radio" name='remove_image' id='remove_image.false' value='false' checked)
                            else
                                input(type='file' name='image' id='image')
                        .form_input
                            label(for="age") Age:
                            input(type="number" name="age" id="age" placeholder="18" min="0" value=(info.age || null))
                        .form_input
                            label(for="height") Height (ft'in):
                            input(type="text" name="height" id="height" placeholder="5'10" min="0" value=(info.height || null))
                        .form_input
                            label(for="weight") Weight (lbs):
                            input(type="number" name="weight" id="weight" placeholder="167" min="0" value=(info.weight || null))
                        .form_input
                            label(for="eye_color") Eye Color:
                            input(type="text" name="eye_color" id="eye_color" placeholder="Brown" value=(info.eye_color || null))
                        .form_input
                            label(for="skin_color") Skin Color:
                            input(type="text" name="skin_color" id="skin_color" placeholder="Caucassian" value=(info.skin_color || null))
                        .form_input
                            label(for="hair_color") Hair Color:
                            input(type="text" name="hair_color" id="hair_color" placeholder="Black" value=(info.hair_color || null))
                        .form_input
                            label(for="place_of_origin") Place of Origin:
                            input(type="text" name="place_of_origin" id="place_of_origin" placeholder="Orzov" value=(info.place_of_origin || null))
                        .form_input
                            label(for="race") Race:
                            input(type="text" name="race" id="race" placeholder="Human" value=(info.race || null))
                        .form_input
                            label(for="class") Class:
                            input(type="text" name="class" id="class" placeholder="Warrior" value=(info.class || null))
                        .form_input
                            label(for="background") Background:
                            input(type="text" name="background" id="background" placeholder="Noble" value=(info.background || null))
                        .form_input
                            label(for="alignment") Alignment:
                            input(type="text" name="alignment" id="alignment" placeholder="(Lawful Good/LG)" value=(info.alignment || null))
                        .form_input
                            label(for="level") Level:
                            input(type="number" name='level' id='level' min='0' placeholder='12' value=(info.level || null))
                    else if pageNumber == 1
                        h3 Personality
                        hr
                        .form_input
                            label(for="personality_traits") Personality Traits:
                            textarea(name="personality_traits" id="personality_traits" rows="3" placeholder="Personality Traits: PHB(p.127)")=(personality.personality_traits || null)
                        .form_input
                            label(for="ideals") Ideals:
                            textarea(name="ideals" id="ideals" rows="3" placeholder="Ideals: PHB(p.127)")=(personality.ideals || null)
                        .form_input
                            label(for="bonds") Bonds:
                            textarea(name="bonds" id="bonds" rows="3" placeholder="Bonds: PHB(p.127)")=(personality.bonds || null)
                        .form_input
                            label(for="flaws") Flaws:
                            textarea(name="flaws" id="flaws" rows="3" placeholder="Flaws: PHB(p.127)")=(personality.flaws || null)
                    else if pageNumber == 2
                        h3 Stats
                        hr
                        .form_input
                            label(for="proficiency_bonus") Proficiency Bonus:
                            input(type="number" name='proficiency_bonus' id='proficiency_bonus' placeholder='2' value=(attr.proficiency_bonus || null))
                        .form_input
                            label(for="passive_perception") Passive Perception:
                            input(type="number" name='passive_perception' id='passive_perception' placeholder=(10+attr.wisdomMod) value=(attr.passive_perception || null))
                        .form_input.radio
                            p Inspiration
                            if attr.inspiration
                                label(for="inspiration.true") Yes
                                input(type="radio" name='inspiration' id='inspiration.true' value='true' checked)
                                label(for="inspiration.false") No
                                input(type="radio" name='inspiration' id='inspiration.false' value='false')
                            else
                                label(for="inspiration.true") Yes
                                input(type="radio" name='inspiration' id='inspiration.true' value='true')
                                label(for="inspiration.false") No
                                input(type="radio" name='inspiration' id='inspiration.false' value='false' checked)
                        .form_input
                            label(for="strength") Strength:
                            input(type="number" name='strength' id='strength' min='0' placeholder='17' value=(attr.strength || null))
                        .form_input
                            label(for="strengthMod") Strength Modifier:
                            //- input(type="number" name='strengthMod' id='strengthMod' placeholder=(Math.floor((attr.strength-10)/2) || attr.strengthMod) disabled)
                            input(type="number" name='strengthMod' id='strengthMod' placeholder=(Math.floor((attr.strength-10)/2) || attr.strengthMod) value=(attr.strengthMod))
                        .form_input
                            label(for="dexterity") Dexterity:
                            input(type="number" name='dexterity' id='dexterity' min='0' placeholder='11' value=(attr.dexterity || null))
                        .form_input
                            label(for="dexterityMod") Dexterity Modifier:
                            //- input(type="number" name='dexterityMod' id='dexterityMod' placeholder=(Math.floor((attr.dexterity-10)/2) || attr.dexterityMod) disabled)
                            input(type="number" name='dexterityMod' id='dexterityMod' placeholder=(Math.floor((attr.dexterity-10)/2) || attr.dexterityMod) value=(attr.dexterityMod))
                        .form_input
                            label(for="constitution") Constitution:
                            input(type="number" name='constitution' id='constitution' min='0' placeholder='12' value=(attr.constitution || null))
                        .form_input
                            label(for="constitutionMod") Constitution Modifier:
                            //- input(type="number" name='constitutionMod' id='constitutionMod' placeholder=(Math.floor((attr.constitution-10)/2) || attr.constitutionMod) disabled)
                            input(type="number" name='constitutionMod' id='constitutionMod' placeholder=(Math.floor((attr.constitution-10)/2) || attr.constitutionMod) value=(attr.constitutionMod))
                        .form_input
                            label(for="intelligence") Intelligence:
                            input(type="number" name='intelligence' id='intelligence' min='0' placeholder='14' value=(attr.intelligence || null))
                        .form_input
                            label(for="intelligenceMod") Intelligence Modifier:
                            //- input(type="number" name='intelligenceMod' id='intelligenceMod' placeholder=(Math.floor((attr.intelligence-10)/2) || attr.intelligenceMod) disabled)
                            input(type="number" name='intelligenceMod' id='intelligenceMod' placeholder=(Math.floor((attr.intelligence-10)/2) || attr.intelligenceMod) value=(attr.intelligenceMod))
                        .form_input
                            label(for="wisdom") Wisdom:
                            input(type="number" name='wisdom' id='wisdom' min='0' placeholder='8' value=(attr.wisdom || null))
                        .form_input
                            label(for="wisdomMod") Wisdom Modifier:
                            //- input(type="number" name='wisdomMod' id='wisdomMod' placeholder=(Math.floor((attr.wisdom-10)/2) || attr.wisdomMod) disabled)
                            input(type="number" name='wisdomMod' id='wisdomMod' placeholder=(Math.floor((attr.wisdom-10)/2) || attr.wisdomMod) value=(attr.wisdomMod))
                        .form_input
                            label(for="charisma") Charisma:
                            input(type="number" name='charisma' id='charisma' min='0' placeholder='13' value=(attr.charisma || null))
                        .form_input
                            label(for="charismaMod") Charisma Modifier:
                            //- input(type="number" name='charismaMod' id='charismaMod' placeholder=(Math.floor((attr.charisma-10)/2) || attr.charismaMod) disabled)
                            input(type="number" name='charismaMod' id='charismaMod' placeholder=(Math.floor((attr.charisma-10)/2) || attr.charismaMod) value=(attr.charismaMod))
                    else if pageNumber == 3
                        h3 Physical Attributes
                        hr
                        .form_input
                            label(for='ac') Armor Class (AC):
                            input(type="number" name='ac' id='ac' placeholder=(10+attr.dexterityMod) value=(phys.ac || null))
                        .form_input
                            label(for='initiative') Initiative:
                            input(type="number" name='initiative' id='initiative' placeholder=(attr.dexterityMod) value=(phys.initiative))
                        .form_input
                            label(for='speed') Speed:
                            input(type="number" name='speed' id='speed' min='0' placeholder='30' value=(phys.speed || null))
                        .form_input
                            label(for='max_hp') Max HP:
                            input(type="number" name='max_hp' id='max_hp' min='0' placeholder='21' value=(phys.max_hp || null))
                        .form_input
                            label(for='current_hp') Current HP:
                            input(type="number" name='current_hp' id='current_hp' min='0' placeholder='19' value=(phys.current_hp))
                        .form_input
                            label(for='temp_hp') Temp HP:
                            input(type="number" name='temp_hp' id='temp_hp' placeholder='3' value=(phys.temp_hp))
                        .form_input
                            label(for='total_hitdie') Total Hit Die:
                            input(type="text" name='total_hitdie' id='total_hitdie' placeholder='4 1d8' value=(phys.total_hitdie || null))
                        .form_input
                            label(for='current_hitdie') Current Hit Die:
                            input(type="number" name='current_hitdie' id='current_hitdie' min='0' placeholder='1' value=(phys.current_hitdie))
                        .form_input
                            label(for='deathsaves_success') Successful Death Saving Throws:
                            input(type="number" name='deathsaves_success' id='deathsaves_success' min='0' max='3' placeholder='3' value=(phys.deathsaves_success))
                        .form_input
                            label(for='deathsaves_fail') Failed Death Saving Throws:
                            input(type="number" name='deathsaves_fail' id='deathsaves_fail' min='0' max='3' placeholder='0' value=(phys.deathsaves_fail))
                    else if pageNumber == 4
                        h3 Saving Throws
                        hr
                        .form_input
                            label(for="strength.value") Strength:
                            input(type="number" name='strength.value' id='strength.value' placeholder=(attr.strengthMod) value=(st.strength.value))
                        .form_input.radio
                            p Proficient
                            if st.strength.proficient
                                label(for="strength.proficient.true") Yes
                                input(type="radio" name='strength.proficient' id='strength.proficient.true' value='true' checked)
                                label(for="strength.proficient.false") No
                                input(type="radio" name='strength.proficient' id='strength.proficient.false' value='false')
                            else
                                label(for="strength.proficient.true") Yes
                                input(type="radio" name='strength.proficient' id='strength.proficient.true' value='true')
                                label(for="strength.proficient.false") No
                                input(type="radio" name='strength.proficient' id='strength.proficient.false' value='false' checked)
                        .form_input
                            label(for="dexterity.value") Dexterity:
                            input(type="number" name='dexterity.value' id='dexterity.value' placeholder=(attr.dexterityMod) value=(st.dexterity.value))
                        .form_input.radio
                            p Proficient
                            if st.dexterity.proficient
                                label(for="dexterity.proficient.true") Yes
                                input(type="radio" name='dexterity.proficient' id='dexterity.proficient.true' value='true' checked)
                                label(for="dexterity.proficient.false") No
                                input(type="radio" name='dexterity.proficient' id='dexterity.proficient.false' value='false')
                            else
                                label(for="dexterity.proficient.true") Yes
                                input(type="radio" name='dexterity.proficient' id='dexterity.proficient.true' value='true')
                                label(for="dexterity.proficient.false") No
                                input(type="radio" name='dexterity.proficient' id='dexterity.proficient.false' value='false' checked)
                        .form_input
                            label(for="constitution.value") Constitution:
                            input(type="number" name='constitution.value' id='constitution.value' placeholder=(attr.constitutionMod) value=(st.constitution.value))
                        .form_input.radio
                            p Proficient
                            if st.constitution.proficient
                                label(for="constitution.proficient.true") Yes
                                input(type="radio" name='constitution.proficient' id='constitution.proficient.true' value='true' checked)
                                label(for="constitution.proficient.false") No
                                input(type="radio" name='constitution.proficient' id='constitution.proficient.false' value='false')
                            else
                                label(for="constitution.proficient.true") Yes
                                input(type="radio" name='constitution.proficient' id='constitution.proficient.true' value='true')
                                label(for="constitution.proficient.false") No
                                input(type="radio" name='constitution.proficient' id='constitution.proficient.false' value='false' checked)
                        .form_input
                            label(for="intelligence.value") Intelligence:
                            input(type="number" name='intelligence.value' id='intelligence.value' placeholder=(attr.intelligenceMod) value=(st.intelligence.value))
                        .form_input.radio
                            p Proficient
                            if st.intelligence.proficient
                                label(for="intelligence.proficient.true") Yes
                                input(type="radio" name='intelligence.proficient' id='intelligence.proficient.true' value='true' checked)
                                label(for="intelligence.proficient.false") No
                                input(type="radio" name='intelligence.proficient' id='intelligence.proficient.false' value='false')
                            else
                                label(for="intelligence.proficient.true") Yes
                                input(type="radio" name='intelligence.proficient' id='intelligence.proficient.true' value='true')
                                label(for="intelligence.proficient.false") No
                                input(type="radio" name='intelligence.proficient' id='intelligence.proficient.false' value='false' checked)
                        .form_input
                            label(for="wisdom.value") Wisdom:
                            input(type="number" name='wisdom.value' id='wisdom.value' placeholder=(attr.wisdomMod) value=(st.wisdom.value))
                        .form_input.radio
                            p Proficient
                            if st.wisdom.proficient
                                label(for="wisdom.proficient.true") Yes
                                input(type="radio" name='wisdom.proficient' id='wisdom.proficient.true' value='true' checked)
                                label(for="wisdom.proficient.false") No
                                input(type="radio" name='wisdom.proficient' id='wisdom.proficient.false' value='false')
                            else
                                label(for="wisdom.proficient.true") Yes
                                input(type="radio" name='wisdom.proficient' id='wisdom.proficient.true' value='true')
                                label(for="wisdom.proficient.false") No
                                input(type="radio" name='wisdom.proficient' id='wisdom.proficient.false' value='false' checked)
                        .form_input
                            label(for="charisma.value") Charisma:
                            input(type="number" name='charisma.value' id='charisma.value' placeholder=(attr.charismaMod) value=(st.charisma.value))
                        .form_input.radio
                            p Proficient
                            if st.charisma.proficient
                                label(for="charisma.proficient.true") Yes
                                input(type="radio" name='charisma.proficient' id='charisma.proficient.true' value='true' checked)
                                label(for="charisma.proficient.false") No
                                input(type="radio" name='charisma.proficient' id='charisma.proficient.false' value='false')
                            else
                                label(for="charisma.proficient.true") Yes
                                input(type="radio" name='charisma.proficient' id='charisma.proficient.true' value='true')
                                label(for="charisma.proficient.false") No
                                input(type="radio" name='charisma.proficient' id='charisma.proficient.false' value='false' checked)
                    else if pageNumber == 5
                        h3 Skills
                        hr
                        .form_input
                            label(for="acrobatics.value") Acrobatics:
                            input(type="number" name='acrobatics.value' id='acrobatics.value' placeholder=(attr.dexterityMod) value=(skills.acrobatics.value))
                        .form_input.radio
                            p Proficient
                            if skills.acrobatics.proficient
                                label(for="acrobatics.proficient.true") Yes
                                input(type="radio" name='acrobatics.proficient' id='acrobatics.proficient.true' value='true' checked)
                                label(for="acrobatics.proficient.false") No
                                input(type="radio" name='acrobatics.proficient' id='acrobatics.proficient.false' value='false')
                            else
                                label(for="acrobatics.proficient.true") Yes
                                input(type="radio" name='acrobatics.proficient' id='acrobatics.proficient.true' value='true')
                                label(for="acrobatics.proficient.false") No
                                input(type="radio" name='acrobatics.proficient' id='acrobatics.proficient.false' value='false' checked)
                        .form_input
                            label(for="animal_handling.value") Animal Handling:
                            input(type="number" name='animal_handling.value' id='animal_handling.value' placeholder=(attr.wisdomMod) value=(skills.animal_handling.value))
                        .form_input.radio
                            p Proficient
                            if skills.animal_handling.proficient
                                label(for="animal_handling.proficient.true") Yes
                                input(type="radio" name='animal_handling.proficient' id='animal_handling.proficient.true' value='true' checked)
                                label(for="animal_handling.proficient.false") No
                                input(type="radio" name='animal_handling.proficient' id='animal_handling.proficient.false' value='false')
                            else
                                label(for="animal_handling.proficient.true") Yes
                                input(type="radio" name='animal_handling.proficient' id='animal_handling.proficient.true' value='true')
                                label(for="animal_handling.proficient.false") No
                                input(type="radio" name='animal_handling.proficient' id='animal_handling.proficient.false' value='false' checked)
                        .form_input
                            label(for="arcana.value") Arcana:
                            input(type="number" name='arcana.value' id='arcana.value' placeholder=(attr.intelligenceMod) value=(skills.arcana.value))
                        .form_input.radio
                            p Proficient
                            if skills.arcana.proficient
                                label(for="arcana.proficient.true") Yes
                                input(type="radio" name='arcana.proficient' id='arcana.proficient.true' value='true' checked)
                                label(for="arcana.proficient.false") No
                                input(type="radio" name='arcana.proficient' id='arcana.proficient.false' value='false')
                            else
                                label(for="arcana.proficient.true") Yes
                                input(type="radio" name='arcana.proficient' id='arcana.proficient.true' value='true')
                                label(for="arcana.proficient.false") No
                                input(type="radio" name='arcana.proficient' id='arcana.proficient.false' value='false' checked)
                        .form_input
                            label(for="athletics.value") Athletics:
                            input(type="number" name='athletics.value' id='athletics.value' placeholder=(attr.strengthMod) value=(skills.athletics.value))
                        .form_input.radio
                            p Proficient
                            if skills.athletics.proficient
                                label(for="athletics.proficient.true") Yes
                                input(type="radio" name='athletics.proficient' id='athletics.proficient.true' value='true' checked)
                                label(for="athletics.proficient.false") No
                                input(type="radio" name='athletics.proficient' id='athletics.proficient.false' value='false')
                            else
                                label(for="athletics.proficient.true") Yes
                                input(type="radio" name='athletics.proficient' id='athletics.proficient.true' value='true')
                                label(for="athletics.proficient.false") No
                                input(type="radio" name='athletics.proficient' id='athletics.proficient.false' value='false' checked)
                        .form_input
                            label(for="deception.value") Deception:
                            input(type="number" name='deception.value' id='deception.value' placeholder=(attr.charismaMod) value=(skills.deception.value))
                        .form_input.radio
                            p Proficient
                            if skills.deception.proficient
                                label(for="deception.proficient.true") Yes
                                input(type="radio" name='deception.proficient' id='deception.proficient.true' value='true' checked)
                                label(for="deception.proficient.false") No
                                input(type="radio" name='deception.proficient' id='deception.proficient.false' value='false')
                            else
                                label(for="deception.proficient.true") Yes
                                input(type="radio" name='deception.proficient' id='deception.proficient.true' value='true')
                                label(for="deception.proficient.false") No
                                input(type="radio" name='deception.proficient' id='deception.proficient.false' value='false' checked)
                        .form_input
                            label(for="history.value") History:
                            input(type="number" name='history.value' id='history.value' placeholder=(attr.intelligenceMod) value=(skills.history.value))
                        .form_input.radio
                            p Proficient
                            if skills.history.proficient
                                label(for="history.proficient.true") Yes
                                input(type="radio" name='history.proficient' id='history.proficient.true' value='true' checked)
                                label(for="history.proficient.false") No
                                input(type="radio" name='history.proficient' id='history.proficient.false' value='false')
                            else
                                label(for="history.proficient.true") Yes
                                input(type="radio" name='history.proficient' id='history.proficient.true' value='true')
                                label(for="history.proficient.false") No
                                input(type="radio" name='history.proficient' id='history.proficient.false' value='false' checked)
                        .form_input
                            label(for="insight.value") Insight:
                            input(type="number" name='insight.value' id='insight.value' placeholder=(attr.wisdomMod) value=(skills.insight.value))
                        .form_input.radio
                            p Proficient
                            if skills.insight.proficient
                                label(for="insight.proficient.true") Yes
                                input(type="radio" name='insight.proficient' id='insight.proficient.true' value='true' checked)
                                label(for="insight.proficient.false") No
                                input(type="radio" name='insight.proficient' id='insight.proficient.false' value='false')
                            else
                                label(for="insight.proficient.true") Yes
                                input(type="radio" name='insight.proficient' id='insight.proficient.true' value='true')
                                label(for="insight.proficient.false") No
                                input(type="radio" name='insight.proficient' id='insight.proficient.false' value='false' checked)
                        .form_input
                            label(for="intimidation.value") Intimidation:
                            input(type="number" name='intimidation.value' id='intimidation.value' placeholder=(attr.charismaMod) value=(skills.intimidation.value))
                        .form_input.radio
                            p Proficient
                            if skills.intimidation.proficient
                                label(for="intimidation.proficient.true") Yes
                                input(type="radio" name='intimidation.proficient' id='intimidation.proficient.true' value='true' checked)
                                label(for="intimidation.proficient.false") No
                                input(type="radio" name='intimidation.proficient' id='intimidation.proficient.false' value='false')
                            else
                                label(for="intimidation.proficient.true") Yes
                                input(type="radio" name='intimidation.proficient' id='intimidation.proficient.true' value='true')
                                label(for="intimidation.proficient.false") No
                                input(type="radio" name='intimidation.proficient' id='intimidation.proficient.false' value='false' checked)
                        .form_input
                            label(for="investigation.value") Investigation:
                            input(type="number" name='investigation.value' id='investigation.value' placeholder=(attr.intelligenceMod) value=(skills.investigation.value))
                        .form_input.radio
                            p Proficient
                            if skills.investigation.proficient
                                label(for="investigation.proficient.true") Yes
                                input(type="radio" name='investigation.proficient' id='investigation.proficient.true' value='true' checked)
                                label(for="investigation.proficient.false") No
                                input(type="radio" name='investigation.proficient' id='investigation.proficient.false' value='false')
                            else
                                label(for="investigation.proficient.true") Yes
                                input(type="radio" name='investigation.proficient' id='investigation.proficient.true' value='true')
                                label(for="investigation.proficient.false") No
                                input(type="radio" name='investigation.proficient' id='investigation.proficient.false' value='false' checked)
                        .form_input
                            label(for="medicine.value") Medicine:
                            input(type="number" name='medicine.value' id='medicine.value' placeholder=(attr.wisdomMod) value=(skills.medicine.value))
                        .form_input.radio
                            p Proficient
                            if skills.medicine.proficient
                                label(for="medicine.proficient.true") Yes
                                input(type="radio" name='medicine.proficient' id='medicine.proficient.true' value='true' checked)
                                label(for="medicine.proficient.false") No
                                input(type="radio" name='medicine.proficient' id='medicine.proficient.false' value='false')
                            else
                                label(for="medicine.proficient.true") Yes
                                input(type="radio" name='medicine.proficient' id='medicine.proficient.true' value='true')
                                label(for="medicine.proficient.false") No
                                input(type="radio" name='medicine.proficient' id='medicine.proficient.false' value='false' checked)
                        .form_input
                            label(for="nature.value") Nature:
                            input(type="number" name='nature.value' id='nature.value' placeholder=(attr.intelligenceMod) value=(skills.nature.value))
                        .form_input.radio
                            p Proficient
                            if skills.nature.proficient
                                label(for="nature.proficient.true") Yes
                                input(type="radio" name='nature.proficient' id='nature.proficient.true' value='true' checked)
                                label(for="nature.proficient.false") No
                                input(type="radio" name='nature.proficient' id='nature.proficient.false' value='false')
                            else
                                label(for="nature.proficient.true") Yes
                                input(type="radio" name='nature.proficient' id='nature.proficient.true' value='true')
                                label(for="nature.proficient.false") No
                                input(type="radio" name='nature.proficient' id='nature.proficient.false' value='false' checked)
                        .form_input
                            label(for="perception.value") Perception:
                            input(type="number" name='perception.value' id='perception.value' placeholder=(attr.wisdomMod) value=(skills.perception.value))
                        .form_input.radio
                            p Proficient
                            if skills.perception.proficient
                                label(for="perception.proficient.true") Yes
                                input(type="radio" name='perception.proficient' id='perception.proficient.true' value='true' checked)
                                label(for="perception.proficient.false") No
                                input(type="radio" name='perception.proficient' id='perception.proficient.false' value='false')
                            else
                                label(for="perception.proficient.true") Yes
                                input(type="radio" name='perception.proficient' id='perception.proficient.true' value='true')
                                label(for="perception.proficient.false") No
                                input(type="radio" name='perception.proficient' id='perception.proficient.false' value='false' checked)
                        .form_input
                            label(for="performance.value") Performance:
                            input(type="number" name='performance.value' id='performance.value' placeholder=(attr.charismaMod) value=(skills.performance.value))
                        .form_input.radio
                            p Proficient
                            if skills.performance.proficient
                                label(for="performance.proficient.true") Yes
                                input(type="radio" name='performance.proficient' id='performance.proficient.true' value='true' checked)
                                label(for="performance.proficient.false") No
                                input(type="radio" name='performance.proficient' id='performance.proficient.false' value='false')
                            else
                                label(for="performance.proficient.true") Yes
                                input(type="radio" name='performance.proficient' id='performance.proficient.true' value='true')
                                label(for="performance.proficient.false") No
                                input(type="radio" name='performance.proficient' id='performance.proficient.false' value='false' checked)
                        .form_input
                            label(for="persuasion.value") Persuasion:
                            input(type="number" name='persuasion.value' id='persuasion.value' placeholder=(attr.charismaMod) value=(skills.persuasion.value))
                        .form_input.radio
                            p Proficient
                            if skills.persuasion.proficient
                                label(for="persuasion.proficient.true") Yes
                                input(type="radio" name='persuasion.proficient' id='persuasion.proficient.true' value='true' checked)
                                label(for="persuasion.proficient.false") No
                                input(type="radio" name='persuasion.proficient' id='persuasion.proficient.false' value='false')
                            else
                                label(for="persuasion.proficient.true") Yes
                                input(type="radio" name='persuasion.proficient' id='persuasion.proficient.true' value='true')
                                label(for="persuasion.proficient.false") No
                                input(type="radio" name='persuasion.proficient' id='persuasion.proficient.false' value='false' checked)
                        .form_input
                            label(for="religion.value") Religion:
                            input(type="number" name='religion.value' id='religion.value' placeholder=(attr.intelligenceMod) value=(skills.religion.value))
                        .form_input.radio
                            p Proficient
                            if skills.religion.proficient
                                label(for="religion.proficient.true") Yes
                                input(type="radio" name='religion.proficient' id='religion.proficient.true' value='true' checked)
                                label(for="religion.proficient.false") No
                                input(type="radio" name='religion.proficient' id='religion.proficient.false' value='false')
                            else
                                label(for="religion.proficient.true") Yes
                                input(type="radio" name='religion.proficient' id='religion.proficient.true' value='true')
                                label(for="religion.proficient.false") No
                                input(type="radio" name='religion.proficient' id='religion.proficient.false' value='false' checked)
                        .form_input
                            label(for="sleight_of_hand.value") Sleight of Hand:
                            input(type="number" name='sleight_of_hand.value' id='sleight_of_hand.value' placeholder=(attr.dexterityMod) value=(skills.sleight_of_hand.value))
                        .form_input.radio
                            p Proficient
                            if skills.sleight_of_hand.proficient
                                label(for="sleight_of_hand.proficient.true") Yes
                                input(type="radio" name='sleight_of_hand.proficient' id='sleight_of_hand.proficient.true' value='true' checked)
                                label(for="sleight_of_hand.proficient.false") No
                                input(type="radio" name='sleight_of_hand.proficient' id='sleight_of_hand.proficient.false' value='false')
                            else
                                label(for="sleight_of_hand.proficient.true") Yes
                                input(type="radio" name='sleight_of_hand.proficient' id='sleight_of_hand.proficient.true' value='true')
                                label(for="sleight_of_hand.proficient.false") No
                                input(type="radio" name='sleight_of_hand.proficient' id='sleight_of_hand.proficient.false' value='false' checked)
                        .form_input
                            label(for="stealth.value") Stealth:
                            input(type="number" name='stealth.value' id='stealth.value' placeholder=(attr.dexterityMod) value=(skills.stealth.value))
                        .form_input.radio
                            p Proficient
                            if skills.stealth.proficient
                                label(for="stealth.proficient.true") Yes
                                input(type="radio" name='stealth.proficient' id='stealth.proficient.true' value='true' checked)
                                label(for="stealth.proficient.false") No
                                input(type="radio" name='stealth.proficient' id='stealth.proficient.false' value='false')
                            else
                                label(for="stealth.proficient.true") Yes
                                input(type="radio" name='stealth.proficient' id='stealth.proficient.true' value='true')
                                label(for="stealth.proficient.false") No
                                input(type="radio" name='stealth.proficient' id='stealth.proficient.false' value='false' checked)
                        .form_input
                            label(for="survival.value") Survival:
                            input(type="number" name='survival.value' id='survival.value' placeholder=(attr.wisdomMod) value=(skills.survival.value))
                        .form_input.radio
                            p Proficient
                            if skills.survival.proficient
                                label(for="survival.proficient.true") Yes
                                input(type="radio" name='survival.proficient' id='survival.proficient.true' value='true' checked)
                                label(for="survival.proficient.false") No
                                input(type="radio" name='survival.proficient' id='survival.proficient.false' value='false')
                            else
                                label(for="survival.proficient.true") Yes
                                input(type="radio" name='survival.proficient' id='survival.proficient.true' value='true')
                                label(for="survival.proficient.false") No
                                input(type="radio" name='survival.proficient' id='survival.proficient.false' value='false' checked)
                    else if pageNumber == 6
                        h3 Weapons
                        hr
                        - let phArray = [{name:'Large Crossbow', bonus:'3', damage:'1d8+1 Piercing'},{name:'Dagger', bonus:'3', damage:'1d4+1 Piercing'},{name:'Dart', bonus:'3', damage:'1d4+1 Piercing'}];
                        - for(let i = 0; i < 3; i++)
                            - const currentPh = phArray[i];
                            .form_input
                                label(for=`weapons[${i}][name]`) Weapon #{i+1} Name:
                                input(type='text' name=`weapons[${i}][name]` id=`weapons[${i}][name]` placeholder=(currentPh.name) value=((weapons.weapons.length >= i+1) ? weapons.weapons[i].name : null))
                            .form_input
                                label(for=`weapons[${i}][attackBonus]`) Weapon #{i+1} Attack Bonus:
                                input(type='number' name=`weapons[${i}][attackBonus]` id=`weapons[${i}][attackBonus]` placeholder=(currentPh.bonus) value=((weapons.weapons.length >= i+1) ? weapons.weapons[i].attackBonus : null))
                            .form_input
                                label(for=`weapons[${i}][damage]`) Weapon #{i+1} Damage:
                                input(type='text' name=`weapons[${i}][damage]` id=`weapons[${i}][damage]` placeholder=(currentPh.damage) value=((weapons.weapons.length >= i+1) ? weapons.weapons[i].damage : null))
                        .form_input
                            label(for='notes') Notes:
                            textarea(name='notes' id="notes" rows="8" placeholder="Large Crossbow - range: 80ft/320ft\nDagger - range 20ft/60ft\nDart - range 20ft/60ft")=(weapons.notes || null)
                    else if pageNumber == 7
                        h3 Equipment
                        hr
                        - let info = ['Copper', 'Silver', 'Electrum', 'Gold', 'Platinum'];
                        - for(let i = 0; i < 5; i++)
                            - const current = info[i].toLowerCase(); let val; 
                            - switch(current){case'copper':val=equipment.money.copper;break;case'silver':val=equipment.money.silver;break;case'electrum':val=equipment.money.electrum;break;case'gold':val=equipment.money.gold;break;default:val=equipment.money.platinum;break;}
                            .form_input
                                label(for=`money.${current}`) #{info[i]}:
                                input(type='number' name=`money.${current}` id=`money.${current}` placeholder=(Math.floor(Math.random()*100+1)) value=(val || null))
                        .form_input
                            label(for='equipment') Equipment:
                            textarea(name='equipment' id='equipment' rows='8' placeholder='* Fine Clothes\n* Disguise Kit\n* Dungeoneer Pack')=(equipment.equipment || null)
                    else if pageNumber == 8
                        h3 Features, Traits, Proficiencies, and Languages
                        hr
                        .form_input
                            label(for='features_and_traits') Features and Traits:
                            textarea(name='features_and_traits' id='features_and_traits' rows='10' placeholder='Darkvision - 60ft (PHB p.38)\nFalse Identity (PHB p.120)\nFire Resistance')=(addInfo.features_and_traits || null)
                        .form_input
                            label(for='additional_features_traits') Additional Features and Traits:
                            textarea(name='additional_features_traits' id='additional_features_traits' rows='10' placeholder='False Identity: John Doe\n - From Storm Wind\n - Friends with S.W. king\n - Bard')=(addInfo.additional_features_traits || null)
                        .form_input
                            label(for='proficiencies_and_languages') Proficiencies and Languages:
                            textarea(name='proficiencies_and_languages' id='proficiencies_and_languages' rows='10' placeholder='Languages: Common, Infernal\nProficiencies:\n - Light Armor\n - Simple Weapons\n - Forgery Kit')=(addInfo.proficiencies_and_languages || null)
                    else if pageNumber == 9
                        h3 Story
                        hr
                        .form_input
                            label(for='backstory') Backstory:
                            +textEditor('backstory')
                        .form_input
                            label(for='allies_and_organizations.organization_name') Organization Name:
                            input(type='text' name='allies_and_organizations.organization_name' id='allies_and_organizations.organization_name' placeholder="Al'Dragur" value=(alliesOrgs.organization_name || null))
                        .form_input
                            label(for='emblem_image') Organization Emblem:
                            if alliesOrgs.emblem_image != '' && alliesOrgs.emblem_image != undefined
                                img(src=`http://res.cloudinary.com/duezou4td/image/upload/${alliesOrgs.emblem_image}.png`, alt=`${hero.name}'s Organization Emblem`)
                                input(type='file' name='emblem_image' id='emblem_image')
                                .form_input.radio
                                    p Remove Emblem
                                    label(for="remove_emblem.true") Yes
                                    input(type="radio" name='remove_emblem' id='remove_emblem.true' value='true')
                                    label(for="remove_emblem.false") No
                                    input(type="radio" name='remove_emblem' id='remove_emblem.false' value='false' checked)
                            else
                                input(type='file' name='emblem_image' id='emblem_image')
                        .form_input
                            label(for='allies_and_organizations.text') Allies and Organizations
                            textarea(name='allies_and_organizations.text' id='allies_and_organizations.text' rows='10' placeholder="Part of Al'Dragur Clan:\n - Allies with gnome village near Undercity")=(alliesOrgs.text || null)
                    else if pageNumber == 10
                        h3 Treasure
                        hr
                        .form_input
                            label(for='text') Treasure:
                            textarea(name='text' id='text' rows='10' placeholder="5 Eye of tiger Gems\n2 Rubies (50gp/each)\n1 Diamond")=(treasure.text || null)
                    else if pageNumber == 11
                        .header
                            h3 Spells
                            .content_options_wrapper
                                .content_option.clickable#addSpell
                                    h3.smaller_font_7 Create Spell
                                .content_option.clickable#removeSpell
                                    h3.smaller_font_7 Remove Spell from Character
                                .content_option.clickable#editSpell
                                    h3.smaller_font_7 Edit Spell
                        hr
                        h4 #{hero.info.race || 'Racial'} spells:
                        .form_input.select
                            select(name='racial_spell' id='racial_spell')
                                option(selected) - select -
                                each level in spells
                                    if (level[1] != undefined)
                                        optgroup(label=level[0])
                                    each spell in level
                                        if (spell instanceof Object)
                                            option(value=spell._id) #{spell.name}
                            button.button_small(type='submit') +
                        each level in heroSpells.racial
                            if (level.length != 1)
                                h5= `${level[0]}`
                            each spell in level
                                if (spell instanceof Object)
                                    .spell_item
                                        p= `${spell.name}`
                                        p.dropdown_button.clickable &nabla;
                                    +spellModal(spell)
                        
                        h4 #{hero.info.class || 'Class'} spells:
                        .form_input.select
                            select(name='class_spell' id='class_spell')
                                option(selected) - select -
                                each level in spells
                                    if (level[1] != undefined)
                                        optgroup(label=level[0])
                                    each spell in level
                                        if (spell instanceof Object)
                                            option(value=spell._id) #{spell.name}
                            button.button_small(type='submit') +
                        each level in heroSpells.class
                            if (level.length != 1)
                                h5= `${level[0]}`
                                each spell in level
                                    if (spell instanceof Object)
                                        .spell_item
                                            p= `${spell.name}`
                                            span.dropdown_button.clickable &nabla;
                                        +spellModal(spell)
                    if pageNumber != 11
                        .form_input
                            button.button_small(type="submit") Guardar
                    
    //- Modal Section
    .bg_modal
        .modal_content.color#modal2
            .modal_header
                h3 Edit Spell
                p.smaller_font.clickable#close_modal2 (close)
            .content_main
                .form_input.select
                            select(name='search_spell' id='search_spell')
                                option(selected) - select -
                                each level in spells
                                    if (level[1] != undefined)
                                        optgroup(label=level[0])
                                    each spell in level
                                        if (spell instanceof Object)
                                            option(value=`${spell.level},${spell._id}`) #{spell.name}
                            button.button_small#searchSpell(type='button' onclick=`loadSpell(${JSON.stringify(spells)})`) search
                form.content_form(action=`/users/user/${username}/editSpell` method='post')
                    input(type="hidden" name='spell_id' id='spell_id')
                    +spellForm()
                    .form_input
                        button.button_small(type='submit' id='save_changes') Save changes

        .modal_content.color#modal0
            .modal_header
                h3 New Spell
                p.smaller_font.clickable#close_modal0 (close)
            .content_main
                form.content_form(action=`/users/user/${username}/savespell` method='post')
                    +spellForm()
                    .form_input
                        button.button_small(type='submit') Add Spell
        
        .modal_content.color#modal1
            .modal_header
                h3 Remove Spells 
                    span.smaller_font_7 (select spells to remove)
                p.smaller_font.clickable#close_modal1 (close)
            .content_main
                form.content_form(action=`/users/user/${username}/removeCharacterSpell` method='post')
                    h4 #{hero.info.race || 'Racial'} spells:
                        each level in heroSpells.racial
                            if (level.length != 1)
                                h5= `${level[0]}`
                                each spell in level
                                    if (spell instanceof Object)
                                        .spell_item
                                            input(type='checkbox' name='racial[]' id='racial[]' value=spell._id)
                                            label(for=spell.name)= `${spell.name}`
                                            span.dropdown_button.clickable &nabla;
                                        +spellModal(spell)
                    hr.margin
                    h4 #{hero.info.class || 'Class'} spells:
                        each level in heroSpells.class
                            if (level.length != 1)
                                h5= `${level[0]}`
                                each spell in level
                                    if (spell instanceof Object)
                                        .spell_item
                                            input(type='checkbox' name='class[]' value=spell._id)
                                            label(for=spell.name)= `${spell.name}`
                                            span.dropdown_button.clickable &nabla;
                                        +spellModal(spell)
                    hr.margin
                    .form_input
                        button.button_small(type='submit') Remove selected spells
                    
                    

    script.
        document.getElementById('addSpell').addEventListener('click', () => {
            document.querySelector('.bg_modal').style.display = 'flex';
            document.querySelector('#modal0').style.display = 'block';
        });

        document.getElementById('close_modal0').addEventListener('click', () => {
            document.querySelector('#modal0').style.display = 'none';
            document.querySelector('.bg_modal').style.display = 'none';
        });

        document.getElementById('removeSpell').addEventListener('click', () => {
            document.querySelector('.bg_modal').style.display = 'flex';
            document.querySelector('#modal1').style.display = 'block';
        });

        document.getElementById('close_modal1').addEventListener('click', () => {
            document.querySelector('#modal1').style.display = 'none';
            document.querySelector('.bg_modal').style.display = 'none';
        });

        document.getElementById('editSpell').addEventListener('click', () => {
            document.querySelector('.bg_modal').style.display = 'flex';
            document.querySelector('#modal2').style.display = 'block';
            document.querySelector('.form_hider').style.display = 'none';
            document.querySelector('#save_changes').style.display = 'none';
        });

        document.getElementById('close_modal2').addEventListener('click', () => {
            document.querySelector('#modal2').style.display = 'none';
            document.querySelector('.bg_modal').style.display = 'none';
            document.querySelector('.form_hider').style.display = 'block';
            document.querySelector('#save_changes').style.display = 'inline-block';
            document.getElementById('search_spell').selectedIndex = 0;

        });

        function loadSpell(spells) {
            const spellSelect = document.getElementById('search_spell');
            const spellInfo = spellSelect.options[spellSelect.selectedIndex].value.split(',');

            let spellLookup = [];
            let spell = {};
            
            if(spellInfo.length == 2) {
                document.querySelector('.form_hider').style.display = 'block';
                document.querySelector('#save_changes').style.display = 'inline-block';

                switch(spellInfo[0]) {
                    case 'cantrip':
                        spellLookup = spells[0];
                        break;
                    case 'level1':
                    case 'level2':
                    case 'level3':
                    case 'level4':
                    case 'level5':
                    case 'level6':
                    case 'level7':
                    case 'level8':
                    case 'level9':
                        const index = parseInt(spellInfo[0].substring(5))
                        spellLookup = spells[index];
                        break;
                    default:
                        break;
                }

                spellLookup.shift();

                for(let i = 0; i < spellLookup.length; i++) {
                    if(spellInfo[1] == spellLookup[i]._id) spell = spellLookup[i];
                }

                const idField = document.getElementById('spell_id');
                idField.value = spell._id;

                const name = document.getElementById('name');
                name.value = spell.name;

                const level = document.getElementById('level');
                let lvlIdx = -1;
                (spell.level === 'cantrip')
                    ? lvlIdx = 0
                    : lvlIdx = parseInt(spell.level.substring(5));
                level.selectedIndex = `${lvlIdx}`;

                const school = document.getElementById('school');
                let schIdx = -1;
                switch(spell.school) {
                    case 'Abjuration':
                        schIdx = 1;
                        break;
                    case 'Conjuration':
                        schIdx = 2;
                        break;
                    case 'Divination':
                        schIdx = 3;
                        break;
                    case 'Enchantment':
                        schIdx = 4;
                        break;
                    case 'Evocation':
                        schIdx = 5;
                        break;
                    case 'Illusion':
                        schIdx = 6;
                        break;
                    case 'Necromancy':
                        schIdx = 7;
                        break;
                    case 'Transmutation':
                        schIdx = 8;
                        break;
                    default:
                        break;
                }
                school.selectedIndex = `${schIdx}`;

                const ritual = document.getElementById('ritual');
                let ritIdx = -1;
                spell.ritual
                    ? ritIdx = 1
                    : ritIdx = 0;
                ritual.selectedIndex = `${ritIdx}`;
                
                const castingTime = document.getElementById('casting_time');
                castingTime.value = spell.casting_time;

                const range = document.getElementById('range');
                range.value = spell.range;
                
                const vComp = document.getElementById('components.verbal');
                const sComp = document.getElementById('components.somatic');
                const mComp = document.getElementById('components.material');
                let vFlag = false, sFlag = false, mFlag = false;
                for(let i = 0; i < spell.components.length; i++) {
                    if(spell.components[i] === 'verbal') vFlag = true;
                    if(spell.components[i] === 'somatic') sFlag = true;
                    if(spell.components[i] === 'material') mFlag = true;
                }
                vComp.checked = vFlag;
                sComp.checked = sFlag;
                mComp.checked = mFlag;
                
                const materials = document.getElementById('materials');
                materials.value = spell.materials;
                
                const duration = document.getElementById('duration');
                duration.value = spell.duration;
                
                const description = document.getElementById('description');
                description.value = spell.description;
            }
        }

        const dropdownButtons = document.querySelectorAll('.dropdown_button');
        const inlineModals = document.querySelectorAll('.inline_modal');

        dropdownButtons.forEach((element, index) => {
            element.addEventListener('click', () => {
                inlineModals[index].style.display === '' || inlineModals[index].style.display === 'none'
                    ? inlineModals[index].style.display = 'block'
                    : inlineModals[index].style.display = 'none';
                
                element.innerHTML === '∇'
                    ? element.innerHTML = '&Delta;'
                    : element.innerHTML = '&nabla;';
            });
        });
