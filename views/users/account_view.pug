extends ../layout

block content

    .l-margin-start
    .l-main-content
        h1= user.username
        hr
        .l-margin--3
        .l-login
            form.c-login-form(action='' method='post')
                .c-login-form__input
                    label(for="username") Usuario:
                    input(type="text" name="username" id="username" placeholder="Ingresa tu usuario nuevo..." required value=user.username disabled)
                .c-login-form__input
                    label(for="password") Contraseña Nueva:
                    input(type="password" name="password" id="password" placeholder="Ingresa tu contraseña nueva..." required disabled)
                .c-login-form__input
                    label(for="confirm_password") Confirmar Contraseña:
                    input(type="password" name="confirm_password" id="confirm_password" placeholder="Ingresa tu contraseña nueva..." required disabled)
                .c-login-form__input
                    button.c-button--white(type="submit" disabled) Actualizar información
            img#login__logo(src='/images/logos/sidequestlogo.png' alt='SideQuest logo')

    //- .outer_wrapper.color
    //-     .content
    //-         .content_header
    //-             h2= user.username
    //-             .content_options_wrapper
    //-                 .content_option
    //-         .content_sidebar
    //-             a.sidebar_item(href=`/users/user/${user.username}`) Cuenta
    //-             if !user.isDM
    //-                 a.sidebar_item(href=`/users/user/${user.username}/hero/0`) Heroe
    //-             else
    //-                 a.sidebar_item(href=`/users/user/${user.username}/manageheroes`) Administrar Heroes
    //-             a.sidebar_item(href=`/users/user/${user.username}/story`) Historia
    //-             a.sidebar_item(href=`/users/user/${user.username}/characters`) Personajes
    //-             if user.isDM || user.isAdmin
    //-                 a.sidebar_item(href=`/users/user/${user.username}/announcements`) Anuncios
    //-             if user.isAdmin
    //-                 hr
    //-                 h3 Admin
    //-                 a.sidebar_item(href='/admin/users') Usuarios
    //-                 a.sidebar_item(href='/admin/announcements') Anuncios
    //-                 a.sidebar_item(href='/admin/manageheroes') Heroes
    //-                 a.sidebar_item(href='/admin/story') Historia
    //-                 a.sidebar_item(href='/admin/characters') Personajes
    //-         .content_main
    //-             if url === `/users/user/${user.username}` || url.endsWith('/changepassword')
    //-                 h3 Cuenta
    //-                 hr
    //-                 p.main_item= `Usuario: ${user.username}`
    //-                 p.main_item= `Admin: ${user.isAdmin}`
    //-                 p.main_item= `DM: ${user.isDM}`
    //-                 if !url.endsWith('/changepassword')
    //-                     a.button_small(href=`/users/user/${user.username}/changepassword`) Cambiar contraseña
    //-                 else
    //-                     form(action="" method="POST")
    //-                         .form_input
    //-                             input(type="password" name='password' id='password' placeholder='Nueva Contraseña')
    //-                         .form_input
    //-                             input(type="password" name='confirm_password' id='confirm_password' placeholder='Confirmar Contraseña')
    //-                         .form_input
    //-                             button.button_small(type='submit') Cambiar contraseña
    //-             else if url.endsWith('/hero')

    //-             else if url.endsWith('/manageheroes')
    //-                 h3 Administrar Heroes
    //-                 hr
    //-                 a.button_small(href=`/users/user/${user.username}/addhero`) Agregar Heroe
    //-                 each hero in heroes
    //-                     a(href=`/users/user/${user.username}/edithero/${hero.name}`)
    //-                         p.main_item #{hero.name}: #{hero.player_name}
    //-                 if user.isAdmin
    //-                     h3 Borrar Heroes
    //-                     hr
    //-                     form.content_form(action='' method='post')
    //-                         button.button_small(type='submit') Borrar Heroes Seleccionados
    //-                         each hero in heroes
    //-                             .spell_item
    //-                                 p #{hero.name}
    //-                                 input.dropdown_button(type='checkbox' name=hero._id)
                
    //-             else if user.isAdmin
    //-                 if url.endsWith('/users')
    //-                     h2 Administrar Usuarios
    //-                     hr
    //-                     .stat_grid
    //-                         each user in users
    //-                             a.stat_block(href=`/admin/users/${user._id}`)
    //-                                 strong= `${user.username}`
    //-                                 p= `DM: ${user.isDM}`
    //-                                 p= `Admin: ${user.isAdmin}`
    //-                 else if url.includes('/admin/users/')
    //-                     h3 #{selectedUser.username}
    //-                     form.content_form(action='' method='post')
    //-                         .stat_grid
    //-                             .form_input.radio
    //-                                 p DM:
    //-                                 if selectedUser.isDM
    //-                                     label(for='isDM.true') Si
    //-                                     input(type='radio' name='isDM' id='isDM.true' value='true' checked)
    //-                                     label(for='isDM.false') No
    //-                                     input(type='radio' name='isDM' id='isDM.false' value='false')
    //-                                 else
    //-                                     label(for='isDM.true') Si
    //-                                     input(type='radio' name='isDM' id='isDM.true' value='true')
    //-                                     label(for='isDM.false') No
    //-                                     input(type='radio' name='isDM' id='isDM.false' value='false' checked)
    //-                             .form_input.radio
    //-                                 p Admin:
    //-                                 if selectedUser.isAdmin
    //-                                     label(for='isAdmin.true') Si
    //-                                     input(type='radio' name='isAdmin' id='isAdmin.true' value='true' checked)
    //-                                     label(for='isAdmin.false') No
    //-                                     input(type='radio' name='isAdmin' id='isAdmin.false' value='false')
    //-                                 else
    //-                                     label(for='isAdmin.true') Si
    //-                                     input(type='radio' name='isAdmin' id='isAdmin.true' value='true')
    //-                                     label(for='isAdmin.false') No
    //-                                     input(type='radio' name='isAdmin' id='isAdmin.false' value='false' checked)
    //-                             .form_input.radio
    //-                                 p Borrar:
    //-                                 label(for='delete.true') Si
    //-                                 input(type='radio' name='delete' id='delete.true' value='true')
    //-                                 label(for='delete.false') No
    //-                                 input(type='radio' name='delete' id='delete.false' value='false' checked)
    //-                         .form_input
    //-                             button.button_small(type='submit') Guardar Cambios
    //-                 else if url.endsWith('/announcements')
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Converter.js")
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Sanitizer.js")
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Editor.js")

    //-                     h3 Administrar Anuncios
    //-                     hr
    //-                     - let count = 0;
    //-                     form.content_form(action='' method='post')
    //-                         .form_input
    //-                             button.button_small(type='submit') Borrar Seleccionados
    //-                         each announcement in announcements
    //-                             .spell_item
    //-                                 p #{announcement.name}
    //-                                 p.dropdown_button.clickable &nabla;
    //-                             .inline_modal.color
    //-                                 h3 #{announcement.name}
    //-                                 - const date = new Date(announcement.date)
    //-                                 em= `${String(date.getDate()).padStart(2,'0')}/${String(date.getMonth() + 1).padStart(2,'0')}/${date.getFullYear()} - ${announcement.user}`

    //-                                 .wmd-panel
    //-                                     div(id=`wmd-button-bar-${count}` style='display: none;')
    //-                                     textarea(class="wmd-input" id=`wmd-input-${count}` style='display: none;')= announcement.summary
    //-                                 div(id=`wmd-preview-${count}` class="wmd-panel wmd-preview heroSummary")

    //-                                 .form_input.radio
    //-                                     label(for=announcement._id) Borrar?
    //-                                     input(type='checkbox' name=announcement._id)
    //-                             - count++;
    //-                     script.
    //-                         const textAreas = document.querySelectorAll('.wmd-input');
    //-                         const previews = document.querySelectorAll('.heroSummary');
    //-                         let converter = Array(textAreas.length);
    //-                         let editor = Array(textAreas.length);

    //-                         for(let i = 0; i < textAreas.length; i++) {
    //-                             converter[i] = new Markdown.Converter();
                                
    //-                             converter[i].hooks.chain("preBlockGamut", function (text, rbg) {
    //-                                     return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
    //-                                         return "<blockquote>" + rbg(inner) + "</blockquote>\n";
    //-                                     });
    //-                                 });

    //-                                 converter[i].hooks.chain("preConversion", function (text) {
    //-                                     return text.replace(/ {4}/g, "<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>");
    //-                                 });

    //-                                 converter[i].hooks.chain("preConversion", function (text) {
    //-                                     return text.replace(/(\(nL\))/g, "<br>");
    //-                                 });
                                
    //-                             editor[i] = new Markdown.Editor(converter[i], `-${i}`);
    //-                             editor[i].run();
    //-                         }

    //-                         const dropdownButtons = document.querySelectorAll('.dropdown_button');
    //-                         const inlineModals = document.querySelectorAll('.inline_modal');

    //-                         dropdownButtons.forEach((element, index) => {
    //-                             element.addEventListener('click', () => {
    //-                                 inlineModals[index].style.display === '' || inlineModals[index].style.display === 'none'
    //-                                     ? inlineModals[index].style.display = 'block'
    //-                                     : inlineModals[index].style.display = 'none';
                                    
    //-                                 element.innerHTML === '∇'
    //-                                     ? element.innerHTML = '&Delta;'
    //-                                     : element.innerHTML = '&nabla;';
    //-                             });
    //-                         });
    //-                 else if url.endsWith('/story')
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Converter.js")
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Sanitizer.js")
    //-                     script(type="text/javascript" src="/javascripts/pagedown/Markdown.Editor.js")

    //-                     h3 Administrar Historia
    //-                     hr
    //-                     - let count = 0;
    //-                     form.content_form(action='' method='post')
    //-                         .form_input
    //-                             button.button_small(type='submit') Borrar Seleccionados
    //-                         each story in stories
    //-                             .spell_item
    //-                                 p #{story.name}
    //-                                 p.dropdown_button.clickable &nabla;
    //-                             .inline_modal.color
    //-                                 h3 #{story.name}

    //-                                 .wmd-panel
    //-                                     div(id=`wmd-button-bar-${count}` style='display: none;')
    //-                                     textarea(class="wmd-input" id=`wmd-input-${count}` style='display: none;')= story.summary
    //-                                 div(id=`wmd-preview-${count}` class="wmd-panel wmd-preview heroSummary")

    //-                                 if story.notes != '' && story.notes != undefined
    //-                                     h3 Notas:
    //-                                     each note in story.notes
    //-                                         .note
    //-                                             div
    //-                                                 h4= note.character
    //-                                                 - const lines = note.text.split(/(\r\n|\r|\n)/g);
    //-                                                 each line in lines
    //-                                                     p= line

    //-                                 .form_input.radio
    //-                                     label(for=story._id) Borrar?
    //-                                     input(type='checkbox' name=story._id)
    //-                             - count++;
    //-                     script.
    //-                         const textAreas = document.querySelectorAll('.wmd-input');
    //-                         const previews = document.querySelectorAll('.heroSummary');
    //-                         let converter = Array(textAreas.length);
    //-                         let editor = Array(textAreas.length);

    //-                         for(let i = 0; i < textAreas.length; i++) {
    //-                             converter[i] = new Markdown.Converter();
                                
    //-                             converter[i].hooks.chain("preBlockGamut", function (text, rbg) {
    //-                                     return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
    //-                                         return "<blockquote>" + rbg(inner) + "</blockquote>\n";
    //-                                     });
    //-                                 });

    //-                                 converter[i].hooks.chain("preConversion", function (text) {
    //-                                     return text.replace(/ {4}/g, "<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>");
    //-                                 });

    //-                                 converter[i].hooks.chain("preConversion", function (text) {
    //-                                     return text.replace(/(\(nL\))/g, "<br>");
    //-                                 });
                                
    //-                             editor[i] = new Markdown.Editor(converter[i], `-${i}`);
    //-                             editor[i].run();
    //-                         }

    //-                         const dropdownButtons = document.querySelectorAll('.dropdown_button');
    //-                         const inlineModals = document.querySelectorAll('.inline_modal');

    //-                         dropdownButtons.forEach((element, index) => {
    //-                             element.addEventListener('click', () => {
    //-                                 inlineModals[index].style.display === '' || inlineModals[index].style.display === 'none'
    //-                                     ? inlineModals[index].style.display = 'block'
    //-                                     : inlineModals[index].style.display = 'none';
                                    
    //-                                 element.innerHTML === '∇'
    //-                                     ? element.innerHTML = '&Delta;'
    //-                                     : element.innerHTML = '&nabla;';
    //-                             });
    //-                         });
    //-                 else if url.endsWith('/characters')
    //-                     h3 Administrar personajes
    //-                     hr
    //-                     form.content_form(action='' method='post')
    //-                         button.button_small(type='submit') Borrar Personajes Seleccionados
    //-                         each character in characters
    //-                             .spell_item
    //-                                 p #{character.name}
    //-                                 input.dropdown_button(type='checkbox' name=character._id)
                    