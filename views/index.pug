extends layout

block content
  script(type="text/javascript" src="/javascripts/pagedown/Markdown.Converter.js")
  script(type="text/javascript" src="/javascripts/pagedown/Markdown.Sanitizer.js")
  script(type="text/javascript" src="/javascripts/pagedown/Markdown.Editor.js")

  //- Three main home page options with their respective pictures
  .l-carousel
    .l-carousel__option
      img(src="/images/resources/tortle.png", alt="Tortle image")
      a.c-button(href='/heroes') Heroes

    .l-carousel__option
      img(src="/images/resources/group.png", alt="Group image")
      a.c-button(href='/characters') Personajes

    .l-carousel__option
      img(src="/images/resources/castle.png", alt="Castle image")
      a.c-button(href='/story') Historia

  .l-margin--9
  .l-divider
    .c-divider__left 
      h1 Anuncios
    .c-divider__right

  //- Load all announcements
  - var count = 0;
  each announcement in announcements
    .l-content-box
      .c-content-box
        img.c-content-box__image(src='/images/logos/favicon.png' alt='SideQuest Logo')
        
        .l-content-box__content
          .c-content-box__title
            h3 #{announcement.name}
            - const date = new Date(announcement.date)
            em.l-content-box__title--info= `Posted ${String(date.getDate()).padStart(2,'0')}/${String(date.getMonth() + 1).padStart(2,'0')}/${date.getFullYear()} by ${announcement.user}`
          
          .l-content-box__text
            //- Announcements preview
            .wmd-panel
              div(id=`wmd-button-bar-${count}` style='display: none;')
              textarea(class="wmd-input" id=`wmd-input-${count}` style='display: none;')= announcement.summary
            div(id=`wmd-preview-${count}` class="wmd-panel wmd-preview heroSummary")
            - count++;
  
  script.
    //- Get all announcements
    const textAreas = document.querySelectorAll('.wmd-input');
    const previews = document.querySelectorAll('.heroSummary');
    let converter = Array(textAreas.length);
    let editor = Array(textAreas.length);

    //- Run Markdown.Editor (preview) to display announcements in correct format
    for(let i = 0; i < textAreas.length; i++) {
      converter[i] = new Markdown.Converter();
      
      converter[i].hooks.chain("preBlockGamut", function (text, rbg) {
            return text.replace(/^ {0,3}""" *\n((?:.*?\n)+?) {0,3}""" *$/gm, function (whole, inner) {
                return "<blockquote>" + rbg(inner) + "</blockquote>\n";
            });
        });

        converter[i].hooks.chain("preConversion", function (text) {
            return text.replace(/ {4}/g, "<span>&nbsp;&nbsp;&nbsp;&nbsp;</span>");
        });

        converter[i].hooks.chain("preConversion", function (text) {
            return text.replace(/(\(nL\))/g, "<br>");
        });
      
      editor[i] = new Markdown.Editor(converter[i], `-${i}`);
      editor[i].run();
    }